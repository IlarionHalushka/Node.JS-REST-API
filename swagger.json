{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Pet Project",
    "description": "Node.js API for making requests to the Pet Project",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "nodejs-api-219820.appspot.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Auth",
      "description": "API for authentication"
    },
    {
      "name": "Categories",
      "description": "API for categories' management"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/signUp": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Create new user in system",
        "summary": "Sign up user with firstName,lastName, email, password and confirmation",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Sign up a new user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "CREATED"
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/auth/signIn": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Sign in",
        "summary": "Sign in user with email and password",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Sign in a new user",
            "schema": {
              "$ref": "#/definitions/UserSignIn"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "AUTH_SUCCESSFUL"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get a list of categories",
        "parameters": [
          {
            "name": "includeInactive",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "name",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization token header",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of categories"
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "description": "Create a new category for products",
        "summary": "Create category with name, photos, active fields",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization token header",
            "type": "string",
            "required": true
          },
          {
            "name": "category",
            "in": "body",
            "description": "Create a new category of products",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Entity is created",
            "schema": {
              "$ref": "#/definitions/Categories"
            } 
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get category with given ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of category that we want to find",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Category is found",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Categories"
        ],
        "summary": "Update a category with name, photos, active fields",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a category to be updated",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization token header",
            "type": "string",
            "required": true
          },
          {
            "name": "category",
            "in": "body",
            "description": "Request body with fields to update category",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Category is updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete a category with name, photos, active fields",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Delete a category of products",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization token header",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Category is removed"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": [
        "email",
        "password",
        "passwordConfirmation",
        "firstName",
        "lastName"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "string@string.com",
          "uniqueItems": true
        },
        "lastName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "passwordConfirmation": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    },
    "UserSignIn": {
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "string@string.com",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Category": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "Electronics",
          "uniqueItems": true
        },
        "photos": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "base64 encoded picture string",
            "format": "base64"
          }
        },
        "active": {
          "type": "boolean"
        }
      }
    },
    "Categories": {
      "type": "array",
      "$ref": "#/definitions/Category"
    }
  }
}