{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Pet Project",
    "description": "Node.js API for making requests to the Pet Project",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Auth",
      "description": "API for authentication"
    },
    {
      "name": "Users",
      "description": "API for users' management"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {



    "/users/signUp": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Create new user in system",
        "summary": "Sign up user with firstName,lastName, email, password and confirmation",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Sign up a new user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "New user is created successfully."
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },




    "/users/signIn": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Sign in",
        "summary": "Sign in user with email and password",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Sign in a new user",
            "schema": {
              "$ref": "#/definitions/UserSignIn"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Auth successful"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },









    "/users/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user with given ID",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "summary": "Update user with give ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    }
  },






  "definitions": {
    "User": {
      "required": [
        "email",
        "password",
        "passwordConfirmation",
        "firstName",
        "lastName"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "string@string.com",
          "uniqueItems": true
        },
        "lastName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "passwordConfirmation": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    },
    "UserSignIn": {
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "string@string.com",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        }
      }
    }
  }
}